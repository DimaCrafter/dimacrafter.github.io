(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{208:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("h2",{attrs:{id:"regular-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regular-installation"}},[t._v("#")]),t._v(" Regular installation")]),t._v(" "),a("p",[a("strong",[t._v("0)")]),t._v(" For first generate "),a("code",[t._v("package.json")]),t._v(" by executing "),a("code",[t._v("npm init")]),t._v(" or "),a("code",[t._v("yarn init")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("1)")]),t._v(" Next install the package using "),a("code",[t._v("npm i dc-api-core --save")]),t._v("\nor "),a("code",[t._v("yarn add dc-api-core")]),t._v(".\nDuring installation, you will be prompted to install CLI globally,\nif not installed, and configure project in current directory\n(for more details see [Installation via CLI] (#installation-via-cli)).")]),t._v(" "),a("p",[a("strong",[t._v("1.1)")]),t._v(" If during setup you configured project using CLI,\nyou can already start the server,")]),t._v(" "),a("p",[a("strong",[t._v("1.2)")]),t._v(" Otherwise, you need to manually perform the steps below.")]),t._v(" "),a("p",[a("strong",[t._v("2)")]),t._v(" Fill "),a("code",[t._v("scripts")]),t._v(" in "),a("code",[t._v("package.json")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dc-api-core"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dc-api-core --dev"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("3)")]),t._v(" Create required directories and files, specified in topic "),a("a",{attrs:{href:"#structure"}},[t._v("Structure")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"installation-via-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-via-cli"}},[t._v("#")]),t._v(" Installation via CLI")]),t._v(" "),a("p",[t._v("You can enter directory, where server will be placed,\nif you already have globally installed CLI, and execute "),a("code",[t._v("dc-api-cli init")]),t._v("\nor "),a("code",[t._v("dc-api-cli init <path>")]),t._v(" (where "),a("code",[t._v("<path>")]),t._v(" - path to desired directory).")]),t._v(" "),a("p",[t._v("Example installation process:")]),t._v(" "),a("Terminal",[a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("[#50e3c2]$ dc-api-cli init[/#]\nWorking in: /path/to/backend\nEnter port: [#0fb1c5]8080[/#]\n\nPlugins:\n[#0fb1c5](use arrow keys to move, space to toggle and enter to submit)[/#]\n[#0ac484]x dc-api-mongo[/#]\n\nSelect session provider:\n[#0fb1c5](use arrow keys to select and enter to submit)[/#]\n  No session\n[#0ac484]âž” dc-api-mongo[/#]\n")])])])]),t._v(" "),a("h2",{attrs:{id:"structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[t._v("#")]),t._v(" Structure")]),t._v(" "),a("p",[t._v("After "),a("code",[t._v("dc-api-core")]),t._v(" installation, current directory will be look like below:")]),t._v(" "),a("Tree",{attrs:{data:t.$page.frontmatter.structure}}),t._v(" "),a("p",[t._v("This is main structure, that "),a("code",[t._v("dc-api-core")]),t._v(" uses.\nYou also can create here files and directories that you need.")]),t._v(" "),a("h3",{attrs:{id:"configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-file"}},[t._v("#")]),t._v(" Configuration file")]),t._v(" "),a("p",[a("code",[t._v("config.json")]),t._v(" contains parameters, used by "),a("code",[t._v("dc-api-core")]),t._v(",\nbut you can store here you data.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Port that API server will started on")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We will need this string in the future.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"auth_pass"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"security"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("See also:")]),t._v(" "),a("a",{attrs:{href:"./api/config"}},[t._v("Available properties in configuration file")])]),t._v(" "),a("h3",{attrs:{id:"controllers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controllers"}},[t._v("#")]),t._v(" Controllers")]),t._v(" "),a("p",[t._v("Controller is a class that contains methods that handles requests coming to server.\nThat's why they are mainly called HTTP handlers. If you want work with WebSockets, read about "),a("a",{attrs:{href:"#no-link"}},[t._v("Socket controller")]),t._v(" later.")]),t._v(" "),a("p",[t._v("As shown above, controllers are located in the "),a("code",[t._v("controllers")]),t._v(" directory.\nThe name of the controller's file must be in PascalCase and match the name\nof exported class.")]),t._v(" "),a("p",[t._v("By default, request URL handles like "),a("code",[t._v("/controller/handler")]),t._v(".")]),t._v(" "),a("p",[t._v("Initially, CLI creates the "),a("code",[t._v("Info")]),t._v(" controller with "),a("code",[t._v("status")]),t._v(" handler:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Importing `package.json` from installed `dc-api-core` package")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pkg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dc-api-core/package'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Exporting controller's class")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Info")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Declaring a handler method that will accept requests")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// on URL http://localhost:8081/Info/status")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sends an object with installed `dc-api-core` version")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and current server time in response")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" pkg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If you "),a("a",{attrs:{href:"#starting-api-server"}},[t._v("start the API server")]),t._v(" and open in your browser "),a("code",[t._v("http://localhost:8081/Info/status")]),t._v(",\nthen you will see a server response similar to example below:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.3-9"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"05.07.2020, 18:21:32"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("Now let's make our "),a("code",[t._v("Test")]),t._v(" controller. To do this, create\n"),a("code",[t._v("controllers/Test.js")]),t._v(" file with the following content:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Getting configuration file's data")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dc-api-core/config'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This method will be called before calling any handler")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onLoad")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Comparing `token` GET parameter with `auth_pass` property,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// that was specified in configuration file earlier")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auth_pass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If this method returns `true`,")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// server will stop this request handling")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, hello!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Now, if you open URL "),a("code",[t._v("http://localhost:8081/Test/hello")]),t._v(" or "),a("code",[t._v("http://localhost:8081/Test/hello?token=incorrect")]),t._v(", you willn't receive an answer,\nand "),a("code",[t._v("http://localhost:8081/Test/hello?token=security")]),t._v(" will return you "),a("code",[t._v('"Hello, hello!"')]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"starting-api-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starting-api-server"}},[t._v("#")]),t._v(" Starting API server")]),t._v(" "),a("p",[t._v("The server can be started in two modes: normal and development mode.")]),t._v(" "),a("p",[a("strong",[t._v("Development mode:")])]),t._v(" "),a("p",[t._v("Starting with: "),a("code",[t._v("yarn dev")]),t._v(" or "),a("code",[t._v("npm run dev")]),t._v(".")]),t._v(" "),a("p",[t._v("In development mode API server will be restarted after changing any file\nin his directory. There are also "),a("code",[t._v("config.dev")]),t._v(" configuration will be used as main.")]),t._v(" "),a("p",[t._v("See also: "),a("code",[t._v("dev")]),t._v(" branch in "),a("a",{attrs:{href:"./api/config"}},[t._v("configuration file")])]),t._v(" "),a("p",[a("strong",[t._v("Normal mode:")])]),t._v(" "),a("p",[t._v("Starting with: "),a("code",[t._v("yarn start")]),t._v(" or "),a("code",[t._v("npm start")]),t._v(".")]),t._v(" "),a("p",[t._v("In this mode API server will be started for production environment.")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);